//DEPRECATED!!!
    //chooses selected plant from dropdown menu and sets selectedPlant to obj on dropdown
    // const [selectedPlant, setSelectedPlant] = useState('')
    // const handleOptionChange = (e) => {
    //     const selectedValue = e.target.value
    //     const selectedObj = allPlants.find(item => item.name === selectedValue)
    //     setSelectedPlant(selectedObj)
    // }
    //DEPRECATED!!!

        // //calculates the columns and rows for the plantbed
    // let columnCount = Math.floor(plantbedDim.width / maxWidth)
    // let columnWidth = 100 / columnCount
    // let rowCount = Math.floor(plantbedDim.height / maxHeight)
    // let rowWidth = 100 / rowCount
    // const plantBedColumns = {
    //     gridTemplateColumns: `repeat(${columnCount}, ${columnWidth}%)`,
    //     gridTemplateRows:`repeat(${rowCount}, ${rowWidth}%)`,
    // }

    // //sorts the planerCount by type of plant (can sort by other attributes if you change name, ie temp range)
    // const sortedPlants = planterCount.slice().sort((a, b) => a.name.localeCompare(b.name))
    // const alignedPlants = sortedPlants.reduce((plants, obj) => {
    //     plants.push(obj)
    //     return plants
    // }, [])

    // //place into greenhouse
    // const tempSort = planterCount.slice().sort((a, b) => {
    //     return a.temperature_range - b.temperature_range
    // })

    // //place into zone
    // const sunlightSort = tempSort.slice().sort((a, b) => {
    //     return a.sunlight_range - b.sunlight_range
    // })
    
    // //place into indiv section
    // const moistureSort = sunlightSort.slice().sort((a, b) => {
    //     return a.moisture_range - b.moisture_range
    // })




    // //divides plant bed into 4 quadrants
    // const quadrantStyle = {
    //     width:`${plantbedDim.width / 2}px`,
    //     height:`${plantbedDim.height / 2}px`,
    // }

        // //finds largest plant diameter and sets it as maxObj
    // let maxWidth = 0
    // let maxHeight = 0
    // let maxObject = null
    // for (const obj of alignedPlants) {
    //     if (obj.width > maxWidth) {
    //         maxWidth = obj.width
    //         maxHeight = obj.height
    //         maxObject = obj
    //     }

    // }

                        
                    {/* <div className='section' id='1' style={{backgroundColor:'blue', ...sectionStyle}}></div>
                    <div className='section' id='2' style={{backgroundColor:'red', ...sectionStyle}}></div>
                    <div className='section' id='3' style={{backgroundColor:'yellow', ...sectionStyle}}></div> */}
                    {/* <div className="quadrant" id='1' style={{backgroundColor:'blue', ...quadrantStyle}}>1</div>
                    <div className="quadrant" id='2' style={{backgroundColor:'red', ...quadrantStyle}}>2</div>
                    <div className="quadrant" id='3' style={{backgroundColor:'green', ...quadrantStyle}}>3</div>
                    <div className="quadrant" id='4' style={{backgroundColor:'yellow', ...quadrantStyle}}>4</div> */}

<div>
                {/* <select value={selectedPlant.name} onChange={handleOptionChange}>
                    <option value=''>Select...</option>
                    {allPlants.map(item => (
                        <option key={item.id} value={item.name}>
                            {item.name}
                        </option>
                    ))}
                </select> */}
                {/* <button onClick={addPlant}>Add</button> */}
            </div>